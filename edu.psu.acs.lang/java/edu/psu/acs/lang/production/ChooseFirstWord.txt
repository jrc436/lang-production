//package edu.psu.acs.lang.production;
//
//import java.util.ArrayList;
//import java.util.List;
//
//import edu.psu.acs.lang.declarative.ChunkTypeEnum;
//import edu.psu.acs.lang.declarative.EmptyChunk;
//import edu.psu.acs.lang.declarative.EmptyEnum;
//import edu.psu.acs.lang.declarative.NullValue;
//import edu.psu.acs.lang.declarative.SSlotName;
//import edu.psu.acs.lang.declarative.SSlotNameEnum;
//import edu.psu.acs.lang.declarative.Slot;
//import edu.psu.acs.lang.declarative.SlotVar;
//
//public class ChooseFirstWord extends ProductionRule {
//	public ChooseFirstWord(int wordIndex, int maxTypes, int maxwords) {
//		super("chooseFirstWord"+wordIndex, new ArrayList<BufferConditions>(), new ArrayList<BufferEffects>(), new ArrayList<String>());
//		
//		String cueVar = "first";
//		String typeVar = "type";
//		String leftVar = "ltype";
//		String rightVar = "rtype";
//		String cueCombo = "combo";
//		
//		List<Slot> goalprecond = new ArrayList<Slot>();
//		//goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.State), new GoalState(GoalStateEnum.Free)));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.FullType), new NullValue()));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.LeftFullType), new NullValue()));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.RightFullType), new NullValue()));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.Combinator), new NullValue()));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.LexsynString, wordIndex, maxwords), new SlotVar(cueVar)));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.LexsynFullType, wordIndex, maxwords, 1, maxTypes), new SlotVar(typeVar)));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.LexsynLeftType, wordIndex, maxwords, 1, maxTypes), new SlotVar(leftVar)));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.LexsynRightType, wordIndex, maxwords, 1, maxTypes), new SlotVar(rightVar)));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.LexsynCombo, wordIndex, maxwords, 1, maxTypes), new SlotVar(cueCombo)));
//		goalprecond.add(new Slot(new SSlotName(SSlotNameEnum.LexsynFullType, wordIndex, maxwords, 2, maxTypes), new EmptyChunk(EmptyEnum.NV))); //we really want a simple first word...
//		super.conditions.add(new BufferConditions(Buffer.goal, ChunkTypeEnum.sentence, goalprecond));
//		
//		List<Slot> goalmod = new ArrayList<Slot>();
//		goalmod.add(new Slot(new SSlotName(SSlotNameEnum.FullType), new SlotVar(typeVar)));
//		goalmod.add(new Slot(new SSlotName(SSlotNameEnum.LeftFullType), new SlotVar(leftVar)));
//		goalmod.add(new Slot(new SSlotName(SSlotNameEnum.RightFullType), new SlotVar(rightVar)));
//		goalmod.add(new Slot(new SSlotName(SSlotNameEnum.Combinator), new SlotVar(cueCombo)));
//		goalmod.addAll(ProductionRule.wipeOut(wordIndex, maxwords, maxTypes));
//		super.effects.add(BufferEffects.modifyGoal(goalmod));
//		
//		super.outputs.add("Choosing "+new SlotVar(cueVar).toString()+" for our first word!");
//	}
//
//}
